/*
* Problem: write a program to fill array with numbers, then check if it is 
Palindrome array or not.
Note: Palindrome array can be read the same from rigth to lift and frome left to 
rigth.
*/

#include <iostream>
using namespace std;

void createArray(int array[100], int& length) {
    cout << "Enter length of array: ";
    cin >> length;
    for (int i = 0; i < length; i++) {
        cout << "enter " << i + 1 << " element: ";
        cin >> array[i];
    }
}

//1St solution:
void isPalindromeArray(int* array, int length) {
    for (int i = 0; i < length / 2 ; i++) {
        if (array[i] != array[length - i - 1]) {
            cout << "\nNo, array is not Palindrome!!\n";
            return;
        }
    }
    cout << "\nYes, array is Palindrome!!\n";
}

//2nd solution:
//int* reversedArray(int* array, int length) {
//    int* reversedOrder = new int[length];
//    for (int i = 0; i < length; i++) {
//        reversedOrder[i] = array[length - 1 - i];
//    }
//    return reversedOrder;
//}

//3rd solution:
//void addArrayElement(int number, int array[100], int& arrLength)
//{
//    array[arrLength] = number;
//    //its a new element so we need to add the length by 1
//    arrLength++;
//}
//
//void copyArrayUsingAddArrayElement(int souceArray[100], int arrLength, int distinatonArray[100], int& arr2Length) {
//    for (int i = 0; i < arrLength; i++) {
//        addArrayElement(souceArray[arrLength - i - 1], distinatonArray, arr2Length);
//    }
//}

//void isPalindromeArray(int array[100],int array2[100],int length){
//    for (int i = 0; i < length; i++) {
//        if (array[i] != array2[i]) {
//            cout << "\nNo, array is not Palindrome!!\n";
//            return;
//        }
//    }
//    cout << "\nYes, array is Palindrome!!\n";
//}

void printArray(int array[100], int length) {
    //cout << "Array Elements: ";
    for (int i = 0; i < length; i++) {
        cout << array[i] << " ";
    }
    cout << endl;
}

int main() {

    int array[100]; int arrLength = 0;
    createArray(array, arrLength);
    cout << "Array elements:\n";
    printArray(array, arrLength);
    
    isPalindromeArray(array, arrLength);//1St solution:
    
    //int* array2 = reversedArray(array, arrLength);//2nd solution:
    // isPalindromeArray(array, array2, arrLength);
    
    //int array2[100]; int arr2Length = 0;//3rd solution:
    //copyArrayUsingAddArrayElement(array, arrLength, array2, arr2Length);
    //isPalindromeArray(array, array2, arrLength);

    return 0;
}
