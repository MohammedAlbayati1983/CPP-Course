/*
* problem: write a program to read how many keys to generate and fill them in array
* then print them on the screen.
*/

#include <iostream>
#include<cstdlib>
using namespace std;

int randomNumber(int from, int to) {
    int randNum = rand() % (to - from + 1) + from;
    return randNum;
}

int readPositiveNumber(string Message) {
    int number = 0;
    do {
        cout << Message;
        cin >> number;
    } while (number <= 0);
    return number;
}

enum enCharType {
    SmallLetter = 1, CapitalLetter = 2, SpecialCharacter = 3, Digit = 4
};

char getRandomCharacter(enCharType charType) {
    switch (charType)
    {
    case SmallLetter:
        return char(randomNumber(97, 122));
        break;
    case CapitalLetter:
        return char(randomNumber(65, 90));
        break;
    case SpecialCharacter:
        return char(randomNumber(32, 47));
        break;
    case Digit:
        return char(randomNumber(48, 57));
        break;
    }
}

string generateWord(enCharType charType, short length) {
    string word;
    for (int i = 1; i <= length; i++) {
        word += getRandomCharacter(charType);
    }
    return word;
}

string generateKey(short numberOfPartKey) {
    string key;
    for (int i = 1; i <= numberOfPartKey; i++) {
        key += generateWord(CapitalLetter, 4);
        if (i == 4)
            continue;
        key += '-';
    }
    return key;
}

string* createArray(int length) {
    string* array = new string[length];
    for (int i = 0; i < length; i++) {
        array[i] = generateKey(4);
    }
    return array;
}

void printArray(string* array, int length) {
    for (int i = 0; i < length; i++) {
        cout << "Array [" << i << "] : " << array[i] << "\n";
    }
    cout << endl;
}

int main() {
    //Seeds the random number generator in C++, called only once
    srand((unsigned)time(NULL));

    int length = readPositiveNumber("Enter how many keys you want to generate: ");
    string* array = createArray(length);
    cout << "Array elements:\n";
    printArray(array, length);
    delete[] array;
    return 0;
}